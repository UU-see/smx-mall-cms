{
  "compilerOptions": {
    // 目标代码(ts -> js(es5/6/7))
    "target": "esnext",
    //目标代码使用的模块化方案(commonjs: require/module.exports/) (es module:import/export)
    "module": "esnext",
    //严格模式(any)
    "strict": true,
    //对jsx做处理 preserve意思为保留，不做处理
    "jsx": "preserve",
    //辅助的导入功能
    "importHelpers": true,
    //按照node方式解析模块
    "moduleResolution": "node",
    //跳过对一些库的类型检测(axios -> 类型/ 其他的第三方)
    //import { axios } from 'axios'
    "skipLibCheck": true,
    //esmodel和commonjs能不能一起使用
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    //要不要生成映射文件
    "sourceMap": true,
    // 文件解析时基本URL
    "baseUrl": ".",
    // 指定具体要解析使用的类型
    "types": ["webpack-env"],
    //路径解析 (类似webpack的alias)
    "paths": {
      "@/*": ["src/*"]
    },
    //可以指定在项目中可以使用哪些库里面的类型
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  //当前哪些ts文件需要被解析
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
 //排除除了引用以外其他node_modules中的文件类型
  "exclude": ["node_modules"]
}
